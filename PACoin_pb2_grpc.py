# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import PACoin_pb2 as PACoin__pb2


class P2PDiscoveryStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ping = channel.unary_unary(
        '/PACoin.P2PDiscovery/ping',
        request_serializer=PACoin__pb2.PingRequest.SerializeToString,
        response_deserializer=PACoin__pb2.PingReply.FromString,
        )
    self.pullPeers = channel.unary_unary(
        '/PACoin.P2PDiscovery/pullPeers',
        request_serializer=PACoin__pb2.PullPeersRequest.SerializeToString,
        response_deserializer=PACoin__pb2.PullPeersReply.FromString,
        )


class P2PDiscoveryServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ping(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def pullPeers(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_P2PDiscoveryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ping': grpc.unary_unary_rpc_method_handler(
          servicer.ping,
          request_deserializer=PACoin__pb2.PingRequest.FromString,
          response_serializer=PACoin__pb2.PingReply.SerializeToString,
      ),
      'pullPeers': grpc.unary_unary_rpc_method_handler(
          servicer.pullPeers,
          request_deserializer=PACoin__pb2.PullPeersRequest.FromString,
          response_serializer=PACoin__pb2.PullPeersReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'PACoin.P2PDiscovery', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class TransactionTransferStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.sendTxns = channel.unary_unary(
        '/PACoin.TransactionTransfer/sendTxns',
        request_serializer=PACoin__pb2.SendTxnsRequest.SerializeToString,
        response_deserializer=PACoin__pb2.SendTxnsReply.FromString,
        )


class TransactionTransferServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def sendTxns(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TransactionTransferServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'sendTxns': grpc.unary_unary_rpc_method_handler(
          servicer.sendTxns,
          request_deserializer=PACoin__pb2.SendTxnsRequest.FromString,
          response_serializer=PACoin__pb2.SendTxnsReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'PACoin.TransactionTransfer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BlockTransferStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.sendBlocks = channel.unary_unary(
        '/PACoin.BlockTransfer/sendBlocks',
        request_serializer=PACoin__pb2.SendBlocksRequest.SerializeToString,
        response_deserializer=PACoin__pb2.SendBlocksReply.FromString,
        )
    self.pullBlocks = channel.unary_unary(
        '/PACoin.BlockTransfer/pullBlocks',
        request_serializer=PACoin__pb2.PullBlocksRequest.SerializeToString,
        response_deserializer=PACoin__pb2.PullBlocksReply.FromString,
        )
    self.syncStatus = channel.unary_unary(
        '/PACoin.BlockTransfer/syncStatus',
        request_serializer=PACoin__pb2.SyncStatusRequest.SerializeToString,
        response_deserializer=PACoin__pb2.SyncStatusReply.FromString,
        )


class BlockTransferServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def sendBlocks(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def pullBlocks(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def syncStatus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BlockTransferServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'sendBlocks': grpc.unary_unary_rpc_method_handler(
          servicer.sendBlocks,
          request_deserializer=PACoin__pb2.SendBlocksRequest.FromString,
          response_serializer=PACoin__pb2.SendBlocksReply.SerializeToString,
      ),
      'pullBlocks': grpc.unary_unary_rpc_method_handler(
          servicer.pullBlocks,
          request_deserializer=PACoin__pb2.PullBlocksRequest.FromString,
          response_serializer=PACoin__pb2.PullBlocksReply.SerializeToString,
      ),
      'syncStatus': grpc.unary_unary_rpc_method_handler(
          servicer.syncStatus,
          request_deserializer=PACoin__pb2.SyncStatusRequest.FromString,
          response_serializer=PACoin__pb2.SyncStatusReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'PACoin.BlockTransfer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
